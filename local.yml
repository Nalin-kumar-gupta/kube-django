version: '3.8'

services:
  web:
    build:
      context: .
      dockerfile: ./compose/django/Dockerfile
    image: django_k8s_web
    container_name: django_k8s_web
    command: /start.sh
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    env_file:
      - services/.env
    depends_on:
      # - redis
      - db

  db:
    image: postgres
    restart: always
    command: -p 5432
    env_file:
      - services/.env
    expose:
      - 5432
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data/

  # redis:
  #   image: redis:7-alpine
  #   container_name: k8s_redis

  # celery_worker:
  #   build:
  #     context: .
  #     dockerfile: ./compose/django/Dockerfile
  #   image: k8s_celery_worker
  #   container_name: k8s_celery_worker
  #   command: /start-celeryworker.sh
  #   volumes:
  #     - .:/app
  #   env_file:
  #     - services/.env
  #   depends_on:
  #     - redis
  #     - db

  # celery_beat:
  #   build:
  #     context: .
  #     dockerfile: ./compose/django/Dockerfile
  #   image: k8s_celery_beat
  #   container_name: k8s_celery_beat
  #   command: /start-celerybeat.sh
  #   volumes:
  #     - .:/app
  #   env_file:
  #     - services/.env
  #   depends_on:
  #     - redis
  #     - db

  ui:
    build:
      context: .
      dockerfile: ./compose/ui/Dockerfile
    image: react_k8s
    container_name: react_k8s
    command: /start-webpack.sh
    volumes:
      - .:/app
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: development

volumes:
  postgres_data: